{"ast":null,"code":"var _jsxFileName = \"/Users/emil/Desktop/React-JS Course/authenticating/frontend/src/pages/Root.js\",\n  _s = $RefreshSig$();\nimport { Outlet, useLoaderData, useSubmit } from \"react-router-dom\";\nimport MainNavigation from \"../components/MainNavigation\";\nimport { useEffect } from \"react\";\nimport { getExpirationDate } from \"../util/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction RootLayout() {\n  _s();\n  const token = useLoaderData();\n  const submit = useSubmit();\n  useEffect(() => {\n    // if the token does not exist dont do anything\n    if (!token) {\n      return;\n    }\n    // if the token is expired logout\n    if (token === \"EXPIRED\") {\n      submit(null, {\n        action: \"/logout\",\n        method: \"post\"\n      });\n      return;\n    }\n    const tokenDuration = getExpirationDate();\n    console.log(\"token duration\", tokenDuration);\n\n    // if the token is not expired check how much is the duration to logout after it ends\n    // this timeout function is for long sessions -> if the user didn't logout\n    setTimeout(() => {\n      submit(null, {\n        action: \"/logout\",\n        method: \"post\"\n      });\n    }, 1000000);\n  }, [token, submit]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MainNavigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(RootLayout, \"Ry2CPpQqd+Qt8CKAW7c5AZ8By2g=\", false, function () {\n  return [useLoaderData, useSubmit];\n});\n_c = RootLayout;\nexport default RootLayout;\nvar _c;\n$RefreshReg$(_c, \"RootLayout\");","map":{"version":3,"names":["Outlet","useLoaderData","useSubmit","MainNavigation","useEffect","getExpirationDate","jsxDEV","_jsxDEV","Fragment","_Fragment","RootLayout","_s","token","submit","action","method","tokenDuration","console","log","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/emil/Desktop/React-JS Course/authenticating/frontend/src/pages/Root.js"],"sourcesContent":["import { Outlet, useLoaderData, useSubmit } from \"react-router-dom\";\nimport MainNavigation from \"../components/MainNavigation\";\nimport { useEffect } from \"react\";\nimport { getExpirationDate } from \"../util/auth\";\n\nfunction RootLayout() {\n  const token = useLoaderData();\n  const submit = useSubmit();\n\n  useEffect(() => {\n    // if the token does not exist dont do anything\n    if (!token) {\n      return;\n    }\n    // if the token is expired logout\n    if (token === \"EXPIRED\") {\n      submit(null, { action: \"/logout\", method: \"post\" });\n      return;\n    }\n    const tokenDuration = getExpirationDate();\n    console.log(\"token duration\", tokenDuration);\n\n    // if the token is not expired check how much is the duration to logout after it ends\n    // this timeout function is for long sessions -> if the user didn't logout\n    setTimeout(() => {\n      submit(null, { action: \"/logout\", method: \"post\" });\n    }, 1000000);\n  }, [token, submit]);\n\n  return (\n    <>\n      <MainNavigation />\n      <main>\n        {/* {navigation.state === 'loading' && <p>Loading...</p>} */}\n        <Outlet />\n      </main>\n    </>\n  );\n}\n\nexport default RootLayout;\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,aAAa,EAAEC,SAAS,QAAQ,kBAAkB;AACnE,OAAOC,cAAc,MAAM,8BAA8B;AACzD,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,iBAAiB,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,KAAK,GAAGX,aAAa,EAAE;EAC7B,MAAMY,MAAM,GAAGX,SAAS,EAAE;EAE1BE,SAAS,CAAC,MAAM;IACd;IACA,IAAI,CAACQ,KAAK,EAAE;MACV;IACF;IACA;IACA,IAAIA,KAAK,KAAK,SAAS,EAAE;MACvBC,MAAM,CAAC,IAAI,EAAE;QAAEC,MAAM,EAAE,SAAS;QAAEC,MAAM,EAAE;MAAO,CAAC,CAAC;MACnD;IACF;IACA,MAAMC,aAAa,GAAGX,iBAAiB,EAAE;IACzCY,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,aAAa,CAAC;;IAE5C;IACA;IACAG,UAAU,CAAC,MAAM;MACfN,MAAM,CAAC,IAAI,EAAE;QAAEC,MAAM,EAAE,SAAS;QAAEC,MAAM,EAAE;MAAO,CAAC,CAAC;IACrD,CAAC,EAAE,OAAO,CAAC;EACb,CAAC,EAAE,CAACH,KAAK,EAAEC,MAAM,CAAC,CAAC;EAEnB,oBACEN,OAAA,CAAAE,SAAA;IAAAW,QAAA,gBACEb,OAAA,CAACJ,cAAc;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAClBjB,OAAA;MAAAa,QAAA,eAEEb,OAAA,CAACP,MAAM;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACL;EAAA,gBACN;AAEP;AAACb,EAAA,CAjCQD,UAAU;EAAA,QACHT,aAAa,EACZC,SAAS;AAAA;AAAAuB,EAAA,GAFjBf,UAAU;AAmCnB,eAAeA,UAAU;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}